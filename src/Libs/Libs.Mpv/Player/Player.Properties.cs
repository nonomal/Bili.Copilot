// Copyright (c) Bili Copilot. All rights reserved.
// <auto-generated />

using Bili.Copilot.Libs.Mpv.Args;
using Bili.Copilot.Libs.Mpv.Enums.Player;
using Bili.Copilot.Libs.Mpv.Interop;
using Bili.Copilot.Libs.Mpv.Structs.Player;

namespace Bili.Copilot.Libs.Mpv;

/// <summary>
/// Represents a player.
/// </summary>
public sealed partial class Player
{
    private bool _isDisposed;
    private long _currentDuration;
    private long _currentPosition;

    public event EventHandler<LogMessageReceivedEventArgs> LogMessageReceived;

    public event EventHandler<PlaybackStateChangedEventArgs> PlaybackStateChanged;

    public event EventHandler<PlaybackStoppedEventArgs> PlaybackStopped;

    public event EventHandler<PlaybackPositionChangedEventArgs> PlaybackPositionChanged;

    public event EventHandler Destroyed;

    public MpvClientNative Client { get; init; }

    public MpvRenderContextNative RenderContext { get; private set; }

    public LibMpvDependencies Dependencies { get; private set; }

    public PlaybackState PlaybackState { get; private set; }

    public bool AutoPlay { get; set; }

    public TimeSpan? Duration => _currentDuration > 0 ? TimeSpan.FromSeconds(_currentDuration) : default;

    public TimeSpan? Position => _currentPosition > 0 ? TimeSpan.FromSeconds(_currentPosition) : default;
}
